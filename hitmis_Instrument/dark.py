#%%
import numpy as np
import matplotlib.pyplot as plt
from glob import glob
import os
import sys
import astropy.io.fits as pyfits
import imageio
from time import gmtime, strftime  # for utc
#%%
imgdir = '/home/charmi/Projects/hitmis_analysis/data/20240925_apollocam_dark/CapObj/2024-09-25_18_22_45Z/*.PNG'
fnames = glob(imgdir) 
len(fnames)
# %%

# Set a overwrite flag True so that images can be overwritten
# Otherwise set it False for safety
overwriteflag = True 

# Process all the images on the command line one at a time

for infile in fnames:
                                                                              
  # Create an output file name with a fits extension from the input name
  inbase = os.path.splitext(os.path.basename(infile))[0]
  outfile = inbase + '.fits'

  # Assign image data to numpy array
  # Convert color images to grayscale using native flatten option
  
  inimage = imageio.imread(infile, as_gray=1)

  # Flip this image using numpy so that the FITS image displays
  #   with the same orientation as the PNG original
  
  outimage = np.flipud(inimage)
  

  # Create a fits image structure without checking for data validity
  
  outlist = pyfits.PrimaryHDU(outimage.astype('float32'))
  
  # Provide a new date stamp
  
  file_time = strftime("%Y-%m-%d %H:%M:%S", gmtime())
  
  # Update the new fits header
  
  outhdr = outlist.header
  outhdr['DATE'] = file_time
  outhdr['history'] = 'Generated by fits_from_pngs' 
  outhdr['history'] = 'Image file '+  infile

  # Write the fits file

  outlist.writeto(outfile, overwrite = overwriteflag)

# Exit   

exit()